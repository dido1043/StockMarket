name: SonarCloud

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

permissions:
  contents: read
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DB_URL: jdbc:postgresql://localhost:5432/stock_market_db
      DB_USER: postgres
      DB_PASSWORD: dido12
      API_KEY: ${{ secrets.FINHUB_API_KEY }} 
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: dido12
          POSTGRES_DB: jdbc:postgresql://localhost:5432/stock_market_db_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"

      - name: Setup Gradle (cache)
        uses: gradle/actions/setup-gradle@v4
        with:
          build-root-directory: StockMarketAPI

      - name: Make wrapper executable
        working-directory: StockMarketAPI
        run: chmod +x ./gradlew

      - name: Wait for Postgres
        run: |
          for i in {1..30}; do
            (echo > /dev/tcp/127.0.0.1/5432) >/dev/null 2>&1 && break
            echo "Waiting for Postgres..."
            sleep 2
          done

      - name: Test + Coverage
        working-directory: StockMarketAPI
        run: ./gradlew --no-daemon clean test jacocoTestReport -i

      # Map secret -> env, then condition on env to avoid the "secrets" context error
      - name: SonarCloud analysis (optional)
        working-directory: StockMarketAPI
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        if: ${{ env.SONAR_TOKEN != '' }}
        run: |
          ./gradlew --no-daemon sonarqube \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.organization=dido1043 \
            -Dsonar.projectKey=dido1043_StockMarket \
            -Dsonar.login=$SONAR_TOKEN

      - name: Upload reports
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: |
            StockMarketAPI/build/reports/tests/test/
            StockMarketAPI/build/reports/jacoco/test/jacocoTestReport.xml
            StockMarketAPI/build/test-results/test/